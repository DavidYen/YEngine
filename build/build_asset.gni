
template("compile_flatbuffer_json") {
  schema_file = invoker.schema_file
  input_json = invoker.input_json
  output_binary = invoker.output_binary

  action(target_name) {
    script = "//build/compile_flatbuffer.py"
    outputs = [ output_binary ]

    args = [ "--depfile", rebase_path("${target_gen_dir}/${target_name}.d"),
             "--","flatc",
             "-o", rebase_path(get_path_info(output_binary, "dir"),
                               root_build_dir),
             "-b", rebase_path(schema_file, root_build_dir),
             rebase_path(schema_file, root_build_dir),
             rebase_path(input_json, root_build_dir),

             rebase_path("//schemas/${schema}.fbs", root_build_dir) ]

    deps = [
      "//third_party/build/google/flatbuffers:flatc"
    ]

    depfile = "${target_gen_dir}/${target_name}.d"
  }
}

template("compile_shader") {
  action(target_name) {
    script = "//build/cmd_wrapper.py"
    shader_file = invoker.shader_file
    shader_output = "${target_gen_dir}/${target_name}.shdr"

    inputs = invoker.inputs
    sources = [ shader_file ]
    outputs = [ shader_output ]
    depfile = "${target_gen_dir}/${target_name}.d"

    args = [ "--", "yshader_compiler",
             "--input_file", rebase_path(shader_file, root_build_dir),
             "--output_file", rebase_path(shader_output, root_build_dir),
             "--dep_file", rebase_path(depfile, root_build_dir) ]

    deps = [
      "//ytools/yshader_compiler",
    ]
  }
}

template("compile_asset_database") {
  action(target_name) {
    script = "//ytools/yasset_database/yasset_database.py"

    sources = invoker.sources
    outputs = [ invoker.output ]

    args = [
      rebase_path("${root_build_dir}/python"),
    ] + rebase_path(outputs) + rebase_path(sources)

    deps = [
      "//schemas:shader_schema_python",
    ] + invoker.deps
  }
}

template("compile_module_binary") {
  action(target_name) {
    script =  "//build/cmd_wrapper.py"
    database_file = invoker.asset_database
    input_json_file = invoker.input
    output_bin_file = invoker.output

    outputs = [ output_bin_file ]
    depfile = "${target_gen_dir}/${target_name}.d"

    args = [ "--", "ymodule_binary_compiler",
             "--database_file", rebase_path(database_file, root_build_dir),
             "--input_file", rebase_path(input_json_file, root_build_dir),
             "--output_file", rebase_path(output_bin_file, root_build_dir),
             "--dep_file", rebase_path(depfile, root_build_dir) ]

    deps = [
      "//ytools/ymodule_binary_compiler",
    ] + invoker.deps
  }
}
