
###############
# BUILD FLAGS #
###############
#
# Input Arguments to the build, along with their default values.
#

declare_args() {
  # Configuration, default to debug, release, gold, platinum
  config = "debug"

  # Architecture to target, one of "x86_64", "x86_32".
  target_arch = "x86_64"

  # Compiler
  compiler = "VS2013"

  # Gfx
  gfx = "dx9"
}

###################
# Other Templates #
###################
template("unit_test") {
  executable(target_name) {
    sources = []
    deps = []
    configs = []
    include_dirs = []

    if (defined(invoker.sources)) {
      sources = invoker.sources
    }

    if (defined(invoker.deps)) {
      deps = invoker.deps
    }

    if (defined(invoker.configs)) {
      configs = invoker.configs
    }

    if (defined(invoker.include_dirs)) {
      include_dirs = invoker.include_dirs
    }

    sources += [ "//third_party/google/gtest/src/gtest_main.cc" ]
  }
}

template("tool_executable") {
  executable(target_name) {
    sources = []
    cflags = []
    deps = []
    configs = []
    include_dirs = []

    if (defined(invoker.sources)) {
      sources = invoker.sources
    }

    if (defined(invoker.cflags)) {
      cflags = invoker.cflags
    }

    if (defined(invoker.deps)) {
      deps = invoker.deps
    }

    if (defined(invoker.configs)) {
      configs = invoker.configs
    }

    if (defined(invoker.include_dirs)) {
      include_dirs = invoker.include_dirs
    }
  }
}

#################
# Compiler Type #
#################
is_visual_studio = false

if (compiler == "VS2013") {
  is_visual_studio = true
}

##################
# OS DEFINITIONS #
##################
is_win = false
is_mac = false
is_linux = false
is_android = false
is_ios = false

if (os =="win") {
  is_win = true
} else if (os == "mac") {
  is_mac = true
} else if (os == "linux") {
  is_linux = true
} else if (os == "android") {
  is_android = true
} else if (os == "ios") {
  is_ios = true
}

##################
# Configurations #
##################
_compiler_configs = [
  "//build/config/compiler/${compiler}:compiler",
  "//build/config/gfx/${gfx}:gfx",
  "//build/config/platform/${os}:platform",
  "//build/config/compiler:default_include_dirs",
]
_linker_configs = []

# Optimization and Debug Settings
_compiler_configs += [
  "//build/config/compiler:${config}",
  "//build/config/compiler/${compiler}:${config}",
]

###################
# Default Targets #
###################
set_defaults("executable") {
  configs = _compiler_configs + _linker_configs + [
    "//build/config/platform/${os}:default_libs",
    "//build/config/compiler/${compiler}:noexceptions",
  ]
}

set_defaults("static_library") {
  configs = _compiler_configs
}

set_defaults("shared_library") {
  configs = _compiler_configs + _linker_configs + [
    "//build/config/platform/${os}:default_libs",
  ]
}

set_defaults("source_set") {
  configs = _compiler_configs
}

set_defaults("unit_test") {
  deps = [
    "//third_party/build/google/gtest",
  ]

  configs = _compiler_configs + _linker_configs + [
    "//build/config/platform/${os}:default_libs",
    "//third_party/build/google/gtest:gtest_config",
  ]
}

set_defaults("tool_executable") {
  configs = _compiler_configs + _linker_configs + [
    "//build/config/platform/${os}:default_libs",
    "//build/config/compiler/${compiler}:exceptions",
  ]
}

#############
# Toolchain #
#############
host_toolchain = false
if (is_win) {
  if (is_visual_studio) {
    if (build_cpu_arch == "x64") {
      host_toolchain = "//build/toolchain/VisualStudio:64"
    } else if (build_cpu_arch == "x86") {
      host_toolchain = "//build/toolchain/VisualStudio:32"
    }

    if (target_arch == "x86_64") {
      set_default_toolchain("//build/toolchain/VisualStudio:64")
    } else if (target_arch == "x86_32") {
      set_default_toolchain("//build/toolchain/VisualStudio:32")
    }
  }
}

assert(host_toolchain != false,
       "Host Toolchain ($compiler) was not setup correctly!")
